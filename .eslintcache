[{"E:\\React Projects\\jan2021\\farmers\\myapp\\src\\index.js":"1","E:\\React Projects\\jan2021\\farmers\\myapp\\src\\App.js":"2","E:\\React Projects\\jan2021\\farmers\\myapp\\src\\reportWebVitals.js":"3","E:\\React Projects\\jan2021\\farmers\\myapp\\src\\Dashboard.js":"4","E:\\React Projects\\jan2021\\farmers\\myapp\\src\\Login.js":"5"},{"size":500,"mtime":1611304696094,"results":"6","hashOfConfig":"7"},{"size":1124,"mtime":1611474160435,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2082,"mtime":1611386386739,"results":"10","hashOfConfig":"7"},{"size":7442,"mtime":1611403650766,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18ygjx9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"E:\\React Projects\\jan2021\\farmers\\myapp\\src\\index.js",[],["26","27"],"E:\\React Projects\\jan2021\\farmers\\myapp\\src\\App.js",["28","29","30","31"],"\nimport React, {useState} from 'react'\n//import { Main } from './Components/Main';\n//import Text from './Components/Text';\nimport Login from './Login';\n// import NewLogin from './NewLogin';\n//import New from './New';\n//import Test from './Login/Test';\nimport Dashboard from './Dashboard';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\n//import { AuthenticatedRoute } from \"authenticated-react-router\";\n\nimport './App.css';\n\n{/* <Switch>\n      <Route exact path=\"/\"/>\n      {loggedIn ? <Redirect to =\"/Dashboard\" /> : <Login setLoggedIn={setLoggedIn}/>}\n      </Switch>\n     */}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <div className=\"App\">\n     <Router>\n      <Switch>\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route path=\"/\" component={Login} />\n      {/* <Redirect to=\"/\"/> */}\n      {/* {loggedIn ? <Dashboard/> : <Login setLoggedIn={setLoggedIn} />} */}\n      {/* {loggedIn ? <Redirect to=\"/Dashboard\"/> : <Login setLoggedIn={setLoggedIn}/>} */}\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\React Projects\\jan2021\\farmers\\myapp\\src\\reportWebVitals.js",[],"E:\\React Projects\\jan2021\\farmers\\myapp\\src\\Dashboard.js",[],"E:\\React Projects\\jan2021\\farmers\\myapp\\src\\Login.js",["32","33"],"import React, { useState } from 'react';\r\n//import {Link, Router} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport sutradhar_logo from '../sutradhar_logo.png'\r\nimport './Login.css'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sutradhar <br />\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://sutradhar.tech/Sutradhar/sutradhar_logo.png)',\r\n    backgroundRepeat: 'no-repeat',\r\n    height: '650px', width: '600px',\r\n    backgroundSize: '1000px 1200px',\r\n    objectFit: 'contain',\r\n    marginTop: '0px',\r\n    backgroundColor:\r\n    theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[800],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nlet isValid = false;\r\n\r\nconst isEmail = (emailVal) => {\r\n  var atSymbol = emailVal.indexOf(\"@\");\r\n  if (atSymbol < 1) return false;\r\n  \r\n  var dot = emailVal.lastIndexOf(\".\");\r\n  if (dot <= atSymbol + 2) return false;\r\n  \r\n  if (dot === emailVal.length - 1) return false;\r\n  return true;\r\n};\r\nconst validate = () => {\r\n  const email = document.getElementById(\"email\");\r\n  const emailVal = email.value.trim();\r\n  \r\n  if (emailVal === \"\") {\r\n    setErrorMsg(email, \"email cannot be blank\");\r\n    isValid = false;\r\n  } else if (!isEmail(emailVal)) {\r\n    setErrorMsg(email, \"Not a valid email\");\r\n    isValid = false;\r\n  } else {\r\n    setSuccessMsg(email);\r\n    isValid = true;\r\n  }\r\n  return isValid;\r\n}\r\n\r\nfunction setErrorMsg(input, errorMsgs) {\r\n  //const formControl = input.parentElement;\r\n  //  const small = formControl.querySelector(\"small\");\r\n  const small = document.getElementById(\"small\");\r\n  small.className = \"form_control error\";\r\n  small.innerText = errorMsgs;\r\n  \r\n}\r\n\r\nfunction setSuccessMsg(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = \"form_control success\";\r\n}\r\n\r\n\r\nexport default function Login({setLoggedIn}) {\r\n    \r\n  const classes = useStyles();\r\n  console.log();\r\n  const [mail, setMail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  \r\n  const mailfun = (e) => {\r\n    setMail(e.target.value);\r\n  }\r\n  const passfun = (e) => {\r\n    setPass(e.target.value);\r\n  }\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n      axios\r\n        .request({\r\n          method: \"POST\",\r\n          url: \"https://sutradhar.tech:8082/api/global\",\r\n          headers: {\r\n            \"cache-control\": \"no-cache\",\r\n            Accept: \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n          },\r\n          data: {\r\n            AppShortName: \"shg\",\r\n            api: \"loginAdmin\",\r\n            descn: mail,\r\n            password: pass\r\n            // message: this.state.Item,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          if(response.data.Success){\r\n            setLoggedIn(true);\r\n          } else {\r\n            alert(response.data.Message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      }else{\r\n        console.log(\"Go away.\")\r\n      }\r\n      \r\n    }\r\n    \r\n\r\nconst goThere = () => {\r\n  <Link to=\"/Text\" ></Link>\r\n}\r\n    return (\r\n      <>\r\n     \r\n      <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} style={{display: 'flex', justifyContent: 'center',alignItems:'center'}} className={classes.image}>\r\n        <img src={sutradhar_logo} />\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={SubmitHandler}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"email\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={mail}\r\n              onChange={mailfun}\r\n              />\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <small id=\"small\">Error msg</small>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={pass}\r\n              onChange={passfun}\r\n            />\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <small id=\"small\">Error msg</small> <br />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n              />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={goThere}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Link link=\"/Text\"></Link>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\n",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":10,"column":41,"nodeType":"42","messageId":"43","endLine":10,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":15,"column":1,"nodeType":"46","messageId":"47","endLine":19,"endColumn":9},{"ruleId":"40","severity":1,"message":"48","line":22,"column":10,"nodeType":"42","messageId":"43","endLine":22,"endColumn":18},{"ruleId":"40","severity":1,"message":"49","line":22,"column":20,"nodeType":"42","messageId":"43","endLine":22,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":45,"column":5,"nodeType":"52","messageId":"53","endLine":45,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":172,"column":9,"nodeType":"56","endLine":172,"endColumn":37},{"ruleId":"36","replacedBy":"57"},{"ruleId":"38","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundSize'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["59"],["60"],"no-global-assign","no-unsafe-negation"]